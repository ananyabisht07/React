{"version":3,"sources":["components/layouts/SignedInLinks.js","store/actions/authActions.js","components/layouts/SignedOutLinks.js","components/layouts/Navbar.js","components/dashboard/Notification.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/Signin.js","components/auth/Signup.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutNavLinks","state","console","log","firebase","links","uid","SignedInLinks","SignedOutLinks","isLoaded","Notifications","notifications","map","notification","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Dashboard","this","Notification","Component","compose","firestoreConnect","collection","orderBy","limit","firestore","ordered","ownProps","match","params","data","Signin","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","Signup","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","Date","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfProps","config","userProfile","useFirestoreForProfile","enableRedirectHandling","resetBeforeLogin","createFirestoreInstance","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.68ae8f41.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { signOut } from '../../store/actions/authActions'\r\nimport { connect } from 'react-redux'\r\n\r\nconst SignedInNavLinks = (props) => {\r\n    return(\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/create'>New Project</NavLink></li>\r\n            <li><a onClick={props.signOut}>Log Out</a></li>\r\n            <li><NavLink to='/' className='btn btn-floating black lighten-3'>\r\n                {props.profile.initials}\r\n            </NavLink></li>\r\n        </ul>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInNavLinks);","export const signIn = (credentials) => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({type: 'LOGIN_SUCCESS'})\r\n        }).catch((err) => {\r\n            dispatch({type: 'LOGIN_ERROR', err})\r\n    })\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({ type: 'SIGNOUT_SUCCESS'});\r\n        })\r\n    }   \r\n}\r\n\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then( resp => {\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0]\r\n            })\r\n        }).then(() => {\r\n            dispatch({ type: 'SIGNUP_SUCCESS'})\r\n        }).catch((err) => {\r\n            dispatch({ type: 'SIGNUP_ERROR', err})\r\n        })\r\n    }   \r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SignedOutNavLinks = () => {\r\n    return(\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/signup'>Sign Up</NavLink></li>\r\n            <li><NavLink to='/signin'>Log In</NavLink></li>\r\n        </ul>\r\n    );\r\n}\r\nexport default SignedOutNavLinks;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SignedInLinks from './SignedInLinks';\r\nimport SignedOutLinks from './SignedOutLinks';\r\nimport { connect } from 'react-redux';\r\nimport { isLoaded } from 'react-redux-firebase' \r\n\r\n\r\nconst Navbar = (props) => {\r\n    const { auth, profile } = props\r\n    const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />\r\n    return(\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to='/' className=\"brand-logo\">MarioPlan</Link>\r\n                { isLoaded(auth) && links }\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nconst matStateToProps = (state) => {\r\n    console.log(state)\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(matStateToProps)(Navbar);","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst Notifications = (props) => {\r\n    const {notifications} = props;\r\n    return(\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-0 style-form\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title color\"><b>Notifications</b></span>\r\n                    <ul className=\"notifications color\">\r\n                        { notifications && notifications.map( notification => {\r\n                            return(\r\n                                <li key={notification.id}> \r\n                                    <span className=\"color\"><b>{notification.user}</b></span>&nbsp;\r\n                                    <span className=\"color\">{notification.content}</span>\r\n                                    <div className=\"grey-text note-date\">\r\n                                        {moment(notification.time.toDate()).fromNow()}\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Notifications;","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst ProjectSummary = ({project}) => {\r\n    return(\r\n        <div className=\"card z-depth-0 project-summary style-form\">\r\n            <div className=\"card-content color\">\r\n                <span className=\"card-title\"><b>{project.title}</b></span>\r\n                <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n                <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default ProjectSummary;","import React from \"react\";\r\nimport ProjectSummary from \"./ProjectSummary\";\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst ProjectList = ({projects}) => {\r\n    return(\r\n        <div className=\"project-list section \">\r\n            { projects && projects.map(project => {\r\n                return(\r\n                    <Link to={'/project/' + project.id} key={project.id} >\r\n                        <ProjectSummary project={project} />\r\n                    </Link>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectList;","import React, { Component } from 'react';\r\nimport Notifications from './Notification';\r\nimport ProjectList from '../projects/ProjectList';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass Dashboard extends Component {\r\n    render(){\r\n        //console.log(this.props);\r\n        const { projects, auth, notifications} = this.props\r\n        if(!auth.uid) return <Redirect to='/signin' />\r\n        return(\r\n            <div className=\"container dashboard\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ProjectList projects={projects} />\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notifications notifications={notifications} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    //console.log(state)\r\n    return {\r\n        projects: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    firestoreConnect([\r\n        { collection: 'projects', orderBy: ['createdAt', 'desc'] },\r\n        { collection: 'notifications', limit: 3, orderBy: ['time', 'desc']}\r\n    ]),\r\n  connect(mapStateToProps),\r\n)(Dashboard);\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom'\r\nimport moment from 'moment';\r\n\r\nconst ProjectDetails = (props) => {\r\n    const { project, auth } = props;\r\n    if(!auth.uid) return <Redirect to='/signin' />\r\n    \r\n    if (project) {\r\n        return (\r\n            <div className=\"container section project-details \">\r\n            <div className=\"card z-depth-0 style-form\">\r\n                <div className=\"card-content \">\r\n                    <span className=\"card-title color\"><h4>{ project.title }</h4></span>\r\n                    <p className=\"color\">{ project.content }</p>\r\n                    <br />\r\n                    <div className=\"card-action grey  black-text\">\r\n                        <div className=\"\">Posted by { project.authorFirstName } { project.authorLastName } .</div>\r\n                        <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"container center\">\r\n                <p>Loading project...</p>\r\n            </div>\r\n            )\r\n        \r\n    }\r\n\r\n    }\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    //console.log(state)\r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ? projects[id] : null\r\n    return{\r\n        project: project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects'}\r\n    ])\r\n)(ProjectDetails)\r\n","import React, {Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../store/actions/authActions';\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass Signin extends Component {\r\n    state = {\r\n        email:'',\r\n        password:''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state)\r\n    }\r\n\r\n\r\n    render(){\r\n        const { authError,auth } = this.props\r\n        if(auth.uid) return <Redirect to='/' />\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"style-form\">\r\n                    <h4 className=\"color\" > Sign In</h4>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" className=\"color\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" className=\"color\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn black lighten z-depth-0\">Login</button>\r\n                    </div>\r\n                    <div className=\"red-text center darken-3\">\r\n                        { authError ? <p><b>{authError}</b></p> : null }\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n    }\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}    \r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\nreturn {\r\n    signIn: (creds) => dispatch(signIn(creds))\r\n}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Signin);\r\n","import React, {Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { signUp } from '../../store/actions/authActions'\r\n\r\nclass Signup extends Component {\r\n    state = {\r\n        email:'',\r\n        password:'',\r\n        firstName:'',\r\n        lastName:'',\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signUp(this.state)\r\n    }\r\n\r\n\r\n    render(){\r\n        const { auth, authError } = this.props\r\n        if(auth.uid) return <Redirect to='/' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"style-form\">\r\n                    <h4 className=\"color\" > Sign Up</h4>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" id=\"firstName\" className=\"color\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" id=\"lastName\" className=\"color\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" className=\"color\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" className=\"color\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn black lighten z-depth-0\">Login</button>\r\n                    </div>\r\n                    <div className=\"red-text center darken-3\">\r\n                        { authError ? <p><b>{authError}</b></p> : null }\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n    }\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup)\r\n","import React, {Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createProject } from '../../store/actions/projectActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass CreateProject extends Component {\r\n    state = {\r\n        title:'',\r\n        content:''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.createProject(this.state)\r\n        this.props.history.push('/');\r\n        //console.log(this.state)\r\n    }\r\n\r\n\r\n    render(){\r\n        const { auth } = this.props\r\n        if(!auth.uid) return <Redirect to='/signin' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"style-form \">\r\n                    <h4 className=\"color\" >Create New Project</h4>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\" className=\"text-type\">Title</label>\r\n                        <input type=\"text\" id=\"title\" className=\"\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field \">\r\n                        <label htmlFor=\"content\">Project Content</label>\r\n                        <textarea  id=\"content\"  className=\"materialize-textarea color\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn black lighten z-depth-0\">Create</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n    }\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createProject:(project) => dispatch(createProject(project))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\r\n","\r\nimport firebase from 'firebase/app'\r\n\r\nexport const createProject = (project) => {\r\n    return (dispatch, getState, { getFirebase,getFirestore }) => {\r\n        //const firebase = getFirebase();\r\n            const profile= getState().firebase.profile;\r\n            const authorId= getState().firebase.auth.uid;\r\n            firebase.firestore().collection('projects').add({\r\n            ...project,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({type: 'CREATE_PROJECT', project:project})\r\n        }).catch((err) => {\r\n            dispatch({type: 'CREATE_PROJECT_ERROR', err})\r\n        })\r\n    \r\n    }\r\n}","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route} from 'react-router-dom';\nimport Navbar from './components/layouts/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport Signin from './components/auth/Signin';\nimport Signup from './components/auth/Signup';\nimport CreateProject from './components/projects/CreateProject';\n\n\nclass App extends Component {\n  render(){\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path='/' component={Dashboard} />\n            <Route path='/project/:id' component={ProjectDetails}  />\n            <Route path='/signin' component={Signin} />\n            <Route path='/signup' component={Signup} />\n            <Route path='/create' component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state=initState, action) => {\r\n    switch(action.type){\r\n        case 'LOGIN_ERROR':\r\n            return {\r\n                ...state,\r\n                authError: 'Login failed'\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('login success')\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('signout success')\r\n            return state;\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signup success')\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            console.log('signup error')\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer;","const initState = {\r\n    projects:[\r\n        {id: '1', title: 'help me find peach', content: 'blah blah blah'},\r\n        {id: '2', title: 'collect all the stars', content: 'blah blah blah'},\r\n        {id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah'}\r\n    ]\r\n}\r\n\r\nconst projectReducer = (state=initState, action) => {\r\n    switch (action.type) {\r\n        case 'CREATE_PROJECT':\r\n            console.log('created project',action.project);\r\n            return state;\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log('carete project error', action.err);\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default projectReducer;","import { combineReducers } from 'redux';\r\nimport authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer;","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyB96YJTSkIkSWh1y-wdoE5CngSyKs2WUDA\",\r\n    authDomain: \"net-ninja-marioplan-f0861.firebaseapp.com\",\r\n    databaseURL: \"https://net-ninja-marioplan-f0861.firebaseio.com\",\r\n    projectId: \"net-ninja-marioplan-f0861\",\r\n    storageBucket: \"net-ninja-marioplan-f0861.appspot.com\",\r\n    messagingSenderId: \"277565043469\",\r\n    appId: \"1:277565043469:web:c57d373f45f2dbe4d6f644\",\r\n    measurementId: \"G-P6JN27P8SF\"\r\n  };\r\n  const firebaseApp = \r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  \r\nexport const firestore = firebaseApp.firestore();\r\nexport default firebase;\r\n\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer  from \"./store/reducers/rootReducer\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport {\n  reduxFirestore,\n  getFirestore,\n  createFirestoreInstance\n} from \"redux-firestore\";\nimport { ReactReduxFirebaseProvider, getFirebase } from \"react-redux-firebase\";\nimport fbConfig from \"./config/fbConfig\";\nimport firebase from \"firebase/app\";\n\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase })),\n    reduxFirestore(fbConfig)\n  )\n);\n\nconst profileSpecificProps = {\n  userProfile: 'users',\n  useFirestoreForProfile: true,\n  enableRedirectHandling: false,\n  resetBeforeLogin: false\n}\n\n\nconst rrfProps = {\n  firebase,\n config: profileSpecificProps,\n  dispatch: store.dispatch,\n  createFirestoreInstance\n};\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <App />\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n\nserviceWorker.unregister();"],"sourceRoot":""}